# define Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: growi-tools
---
# Storege
## for growi-app
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-growi-app
  namespace: growi-tools
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: sc-growi-app
  gcePersistentDisk:
    pdName: growi-disk-01
    fsType: ext4
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-growi-app
  namespace: growi-tools
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: sc-growi-app
  resources:
    requests:
      storage: 10Gi
---
## for growi-mongodb
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-growi-mongodb
  namespace: growi-tools
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: sc-growi-mongodb
  gcePersistentDisk:
    pdName: growi-disk-02
    fsType: ext4
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-growi-mongodb
  namespace: growi-tools
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: sc-growi-mongodb
  resources:
    requests:
      storage: 10Gi
---
# Database(mongo)
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: growi-mongo
  namespace: growi-tools
  labels:
    app: growi-mongo
spec:
  serviceName: "growi-mongo"
  selector:
    matchLabels:
      app: growi-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: growi-mongo
      name: growi-mongo
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: growi-mongo
        image: mongo:3.6
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: growi-mongodb-data
          mountPath: /data/db
      volumes:
      - name: growi-mongodb-data
        persistentVolumeClaim:
          claimName: pvc-growi-mongodb
---
apiVersion: v1
kind: Service
metadata:
  name: sv-growi-mongo
  namespace: growi-tools
  labels:
    app: growi-mongo
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: growi-mongo
---
# Elasticsearch
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: growi-elasticsearch
  namespace: growi-tools
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: growi-elasticsearch
    spec:
      containers:
      - name: growi-elasticsearch
        image: elasticsearch:5.3-alpine
        env:
        - name: ES_JAVA_OPTS
          value: "-Xms256m -Xmx256m"
        command: ["sh", "-c", "./bin/elasticsearch-plugin list | grep -q analysis-kuromoji || ./bin/elasticsearch-plugin install analysis-kuromoji;./bin/elasticsearch-plugin list | grep -q analysis-icu || ./bin/elasticsearch-plugin install analysis-icu;/docker-entrypoint.sh elasticsearch"]
        ports:
        - containerPort: 9200
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: growi-elasticsearch
  name: sv-growi-elasticsearch
  namespace: growi-tools
spec:
  ports:
  - port: 9200
    protocol: TCP
    targetPort: 9200
  selector:
    app: growi-elasticsearch
---
# HackMD
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: growi-hackmd
  namespace: growi-tools
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: growi-hackmd
    spec:
      containers:
      - name: growi-hackmd
        image: kazuhito/growi-docker-compose-hackmd
        env:
        - name: GROWI_URI
          value: "https://wiki.dev.example.com"
        - name: CMD_DB_URL
          value: "sqlite://dummyhost/hackmd/sqlite/codimd.db"
        - name: CMD_CSP_ENABLE
          value: "false"
        ports:
        - containerPort: 3000
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: growi-hackmd
  name: sv-growi-hackmd
  namespace: growi-tools
spec:
  type: NodePort
  ports:
  - port: 3010
    protocol: TCP
    targetPort: 3000
  selector:
    app: growi-hackmd
---
# Growi Application
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: growi-app
  namespace: growi-tools
  labels:
    app: growi-app
spec:
  selector:
    matchLabels:
      app: growi-app
  replicas: 1 # 共有ディスクでpodの2つ目を建てようとするとmountでコケる致命的なエラーがあるため、実質1が上限である
  template:
    metadata:
      labels:
        app: growi-app
      name: growi-app
    spec:
      containers:
      - name: growi-app
        image: weseek/growi:3
        env:
        - name: APP_SITE_URL
          value: "https://wiki.dev.example.com"
        - name: MONGO_URI
          value: "mongodb://sv-growi-mongo:27017/growi"
        - name: ELASTICSEARCH_URI
          value: "http://sv-growi-elasticsearch:9200/growi"
        - name: PASSWORD_SEED
          value: "changeme"
        - name: FILE_UPLOAD
          value: "local"
        - name: FORCE_WIKI_MODE
          value: "private"
        - name: HACKMD_URI
          value: "https://hackmd.dev.example.com"
        - name: HACKMD_URI_FOR_SERVER
          value: "http://sv-growi-hackmd:3010"
        - name: MATHJAX
          value: "1"
        - name: PLANTUML_URI
          value: "http://www.plantuml.com/plantuml"
        ports:
        - containerPort: 3000
        readinessProbe:
          httpGet:
            path: /_api/v3/healthcheck
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: growi-data
          mountPath: /data
      volumes:
      - name: growi-data
        persistentVolumeClaim:
          claimName: pvc-growi-app
---
apiVersion: v1
kind: Service
metadata:
  name: sv-growi-app
  namespace: growi-tools
  labels:
    app: growi-app
spec:
  type: NodePort
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: growi-app
---
# Ingress and Certificate and IP settings
apiVersion: networking.gke.io/v1beta1
kind: ManagedCertificate
metadata:
  name: cert-growi-app
  namespace: growi-tools
spec:
  domains:
    - wiki.dev.example.com
---
apiVersion: networking.gke.io/v1beta1
kind: ManagedCertificate
metadata:
  name: cert-growi-hackmd
  namespace: growi-tools
spec:
  domains:
    - hackmd.dev.example.com
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-growi
  namespace: growi-tools
  annotations:
    kubernetes.io/ingress.allow-http: "false"
    kubernetes.io/ingress.global-static-ip-name: "ip-growi"
    networking.gke.io/managed-certificates: "cert-growi-app,cert-growi-hackmd"
spec:
  rules:
  - host: wiki.dev.example.com
    http:
      paths:
      - path: /*
        backend:
          serviceName: sv-growi-app
          servicePort: 80
  - host: hackmd.dev.example.com
    http:
      paths:
      - path: /*
        backend:
          serviceName: sv-growi-hackmd
          servicePort: 3010
